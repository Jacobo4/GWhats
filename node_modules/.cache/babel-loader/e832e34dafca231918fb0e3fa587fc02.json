{"ast":null,"code":"var _jsxFileName = \"/home/jacobo/Proyects/Me/GWhats/src/pages/Home/Home.js\";\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  // Client ID and API key from the Developer Console\n  var CLIENT_ID = '<YOUR_CLIENT_ID>';\n  var API_KEY = '<YOUR_API_KEY>'; // Array of API discovery doc URLs for APIs used by the quickstart\n\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n  // included, separated by spaces.\n\n  var SCOPES = 'https://www.googleapis.com/auth/gmail.readonly';\n  var authorizeButton = document.getElementById('authorize_button');\n  var signoutButton = document.getElementById('signout_button');\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  }\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n\n  function initClient() {\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      authorizeButton.onclick = handleAuthClick;\n      signoutButton.onclick = handleSignoutClick;\n    }, function (error) {\n      appendPre(JSON.stringify(error, null, 2));\n    });\n  }\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      authorizeButton.style.display = 'none';\n      signoutButton.style.display = 'block';\n      listLabels();\n    } else {\n      authorizeButton.style.display = 'block';\n      signoutButton.style.display = 'none';\n    }\n  }\n  /**\n   *  Sign in the user upon button click.\n   */\n\n\n  function handleAuthClick(event) {\n    gapi.auth2.getAuthInstance().signIn();\n  }\n  /**\n   *  Sign out the user upon button click.\n   */\n\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n  /**\n   * Append a pre element to the body containing the given message\n   * as its text node. Used to display the results of the API call.\n   *\n   * @param {string} message Text to be placed in pre element.\n   */\n\n\n  function appendPre(message) {\n    var pre = document.getElementById('content');\n    var textContent = document.createTextNode(message + '\\n');\n    pre.appendChild(textContent);\n  }\n  /**\n   * Print all Labels in the authorized user's inbox. If no labels\n   * are found an appropriate message is printed.\n   */\n\n\n  function listLabels() {\n    gapi.client.gmail.users.labels.list({\n      'userId': 'me'\n    }).then(function (response) {\n      var labels = response.result.labels;\n      appendPre('Labels:');\n\n      if (labels && labels.length > 0) {\n        for (i = 0; i < labels.length; i++) {\n          var label = labels[i];\n          appendPre(label.name);\n        }\n      } else {\n        appendPre('No Labels found.');\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gmail API Quickstart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"authorize_button\",\n      style: \"display: none;\",\n      children: \"Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signout_button\",\n      style: \"display: none;\",\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      id: \"content\",\n      style: \"white-space: pre-wrap;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Home;\nexport default Home; // AIzaSyCy7KboBOEsJ62zrucmcVr7E9snnZaq3CQ\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jacobo/Proyects/Me/GWhats/src/pages/Home/Home.js"],"names":["Home","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","handleClientLoad","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","onclick","handleAuthClick","handleSignoutClick","error","appendPre","JSON","stringify","style","display","listLabels","event","signIn","signOut","message","pre","textContent","createTextNode","appendChild","gmail","users","labels","list","response","result","length","i","label","name"],"mappings":"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","sourcesContent":["import './Home.css';\n\nfunction Home() {\n      // Client ID and API key from the Developer Console\n      var CLIENT_ID = '<YOUR_CLIENT_ID>';\n      var API_KEY = '<YOUR_API_KEY>';\n\n      // Array of API discovery doc URLs for APIs used by the quickstart\n      var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"];\n\n      // Authorization scopes required by the API; multiple scopes can be\n      // included, separated by spaces.\n      var SCOPES = 'https://www.googleapis.com/auth/gmail.readonly';\n\n      var authorizeButton = document.getElementById('authorize_button');\n      var signoutButton = document.getElementById('signout_button');\n\n      /**\n       *  On load, called to load the auth2 library and API client library.\n       */\n      function handleClientLoad() {\n        gapi.load('client:auth2', initClient);\n      }\n\n      /**\n       *  Initializes the API client library and sets up sign-in state\n       *  listeners.\n       */\n      function initClient() {\n        gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          discoveryDocs: DISCOVERY_DOCS,\n          scope: SCOPES\n        }).then(function () {\n          // Listen for sign-in state changes.\n          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n          authorizeButton.onclick = handleAuthClick;\n          signoutButton.onclick = handleSignoutClick;\n        }, function(error) {\n          appendPre(JSON.stringify(error, null, 2));\n        });\n      }\n\n      /**\n       *  Called when the signed in status changes, to update the UI\n       *  appropriately. After a sign-in, the API is called.\n       */\n      function updateSigninStatus(isSignedIn) {\n        if (isSignedIn) {\n          authorizeButton.style.display = 'none';\n          signoutButton.style.display = 'block';\n          listLabels();\n        } else {\n          authorizeButton.style.display = 'block';\n          signoutButton.style.display = 'none';\n        }\n      }\n\n      /**\n       *  Sign in the user upon button click.\n       */\n      function handleAuthClick(event) {\n        gapi.auth2.getAuthInstance().signIn();\n      }\n\n      /**\n       *  Sign out the user upon button click.\n       */\n      function handleSignoutClick(event) {\n        gapi.auth2.getAuthInstance().signOut();\n      }\n\n      /**\n       * Append a pre element to the body containing the given message\n       * as its text node. Used to display the results of the API call.\n       *\n       * @param {string} message Text to be placed in pre element.\n       */\n      function appendPre(message) {\n        var pre = document.getElementById('content');\n        var textContent = document.createTextNode(message + '\\n');\n        pre.appendChild(textContent);\n      }\n\n      /**\n       * Print all Labels in the authorized user's inbox. If no labels\n       * are found an appropriate message is printed.\n       */\n      function listLabels() {\n        gapi.client.gmail.users.labels.list({\n          'userId': 'me'\n        }).then(function(response) {\n          var labels = response.result.labels;\n          appendPre('Labels:');\n\n          if (labels && labels.length > 0) {\n            for (i = 0; i < labels.length; i++) {\n              var label = labels[i];\n              appendPre(label.name)\n            }\n          } else {\n            appendPre('No Labels found.');\n          }\n        });\n      }\n\n    return (\n        <div className=\"App\">\n            <p>Gmail API Quickstart</p>\n\n            <button id=\"authorize_button\" style=\"display: none;\">Authorize</button>\n            <button id=\"signout_button\" style=\"display: none;\">Sign Out</button>\n\n            <pre id=\"content\" style=\"white-space: pre-wrap;\"></pre>\n        </div>\n\n    );\n}\n\nexport default Home;\n// AIzaSyCy7KboBOEsJ62zrucmcVr7E9snnZaq3CQ"]},"metadata":{},"sourceType":"module"}